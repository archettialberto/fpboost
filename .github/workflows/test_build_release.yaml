name: Test, Build and Release to Pypi

permissions:
  contents: read
  actions: read

on:
  push:
    branches: [ main ]
    tags:
      - '*.*.*'
  pull_request:
    branches: [ main ]

env:
  POETRY_VERSION: 1.4.0
  BUILD_PYTHON_VERSION: 3.12

jobs:

  # Testing Job
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install poetry
      run: pipx install poetry==${{ env.POETRY_VERSION }}

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: poetry

    - name: Install dependencies
      run: |
        poetry install --without experiments --without docs

    - name: Run tests with coverage
      continue-on-error: true
      run: |
          poetry run pytest --cov=fpboost --cov-report=xml

    - name: Upload results to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  # Build job
  build:
    name: Build package
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry==${{ env.POETRY_VERSION }}

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.BUILD_PYTHON_VERSION }}
          cache: poetry

      - name: Build package
        run: poetry build

      - uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: >-
      Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/fpboost  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Github Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/fpboost

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
        repository-url: https://test.pypi.org/legacy/
